data "awscc_ecs_service" "example" {
    availability_zone_rebalancing = "{{ availability_zone_rebalancing }}"
    capacity_provider_strategy = "{
    base = {{ base }}
    capacity_provider = {{ capacity_provider }}
    weight = {{ weight }}
}"
    cluster = "{{ cluster }}"
    deployment_configuration = "{
    alarms = {
    alarm_names = {{ alarm_names }}
    enable = {{ enable }}
    rollback = {{ rollback }}
}
    deployment_circuit_breaker = {
    enable = {{ enable }}
    rollback = {{ rollback }}
}
    maximum_percent = {{ maximum_percent }}
    minimum_healthy_percent = {{ minimum_healthy_percent }}
}"
    deployment_controller = "{
    type = {{ type }}
}"
    desired_count = "{{ desired_count }}"
    enable_ecs_managed_tags = "{{ enable_ecs_managed_tags }}"
    enable_execute_command = "{{ enable_execute_command }}"
    health_check_grace_period_seconds = "{{ health_check_grace_period_seconds }}"
    id = "{{ id }}"
    launch_type = "{{ launch_type }}"
    load_balancers = "{
    container_name = {{ container_name }}
    container_port = {{ container_port }}
    load_balancer_name = {{ load_balancer_name }}
    target_group_arn = {{ target_group_arn }}
}"
    name = "{{ name }}"
    network_configuration = "{
    awsvpc_configuration = {
    assign_public_ip = {{ assign_public_ip }}
    security_groups = {{ security_groups }}
    subnets = {{ subnets }}
}
}"
    placement_constraints = "{
    expression = {{ expression }}
    type = {{ type }}
}"
    placement_strategies = "{
    field = {{ field }}
    type = {{ type }}
}"
    platform_version = "{{ platform_version }}"
    propagate_tags = "{{ propagate_tags }}"
    role = "{{ role }}"
    scheduling_strategy = "{{ scheduling_strategy }}"
    service_arn = "{{ service_arn }}"
    service_connect_configuration = "{
    enabled = {{ enabled }}
    log_configuration = {
    log_driver = {{ log_driver }}
    options = {{ options }}
    secret_options = {
    name = {{ name }}
    value_from = {{ value_from }}
}
}
    namespace = {{ namespace }}
    services = {
    client_aliases = {
    dns_name = {{ dns_name }}
    port = {{ port }}
}
    discovery_name = {{ discovery_name }}
    ingress_port_override = {{ ingress_port_override }}
    port_name = {{ port_name }}
    timeout = {
    idle_timeout_seconds = {{ idle_timeout_seconds }}
    per_request_timeout_seconds = {{ per_request_timeout_seconds }}
}
    tls = {
    issuer_certificate_authority = {
    aws_pca_authority_arn = {{ aws_pca_authority_arn }}
}
    kms_key = {{ kms_key }}
    role_arn = {{ role_arn }}
}
}
}"
    service_name = "{{ service_name }}"
    service_registries = "{
    container_name = {{ container_name }}
    container_port = {{ container_port }}
    port = {{ port }}
    registry_arn = {{ registry_arn }}
}"
    tags = "{
    key = {{ key }}
    value = {{ value }}
}"
    task_definition = "{{ task_definition }}"
    volume_configurations = "{
    managed_ebs_volume = {
    encrypted = {{ encrypted }}
    filesystem_type = {{ filesystem_type }}
    iops = {{ iops }}
    kms_key_id = {{ kms_key_id }}
    role_arn = {{ role_arn }}
    size_in_gi_b = {{ size_in_gi_b }}
    snapshot_id = {{ snapshot_id }}
    tag_specifications = {
    propagate_tags = {{ propagate_tags }}
    resource_type = {{ resource_type }}
    tags = {
    key = {{ key }}
    value = {{ value }}
}
}
    throughput = {{ throughput }}
    volume_type = {{ volume_type }}
}
    name = {{ name }}
}"
    vpc_lattice_configurations = "{
    port_name = {{ port_name }}
    role_arn = {{ role_arn }}
    target_group_arn = {{ target_group_arn }}
}"
}